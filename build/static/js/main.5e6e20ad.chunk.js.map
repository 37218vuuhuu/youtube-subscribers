{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","channelId","setChannelId","channelSubs","setChannelSubs","channelViews","setChannelViews","channelVideos","setChannelVideos","changeChannelId","e","channel","target","value","getSubscribers","preventDefault","axios","get","then","res","subs","data","subscriberCount","views","viewCount","videos","videoCount","catch","err","console","error","className","onSubmit","type","onChange","setInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAiEeA,MA5Df,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEyBF,oBAAU,GAFnC,mBAENG,EAFM,KAEOC,EAFP,OAG2BJ,oBAAU,GAHrC,mBAGNK,EAHM,KAGQC,EAHR,OAI6BN,oBAAU,GAJvC,mBAINO,EAJM,KAISC,EAJT,KAMb,SAASC,EAAgBC,GACvB,IAAMC,EAAkBD,EAAEE,OAAOC,MACjCX,EAAaS,GAGf,SAASG,EAAeJ,GACZ,OAANA,GACFA,EAAEK,iBAGJC,IAAMC,IAAN,mBAAsBhB,IAAaiB,MAAK,SAAAC,GACtC,IAAMC,EAAeD,EAAIE,KAAKC,kBAAoB,EAClDlB,EAAegB,GACf,IAAMG,EAAgBJ,EAAIE,KAAKG,YAAc,EAC7ClB,EAAgBiB,GAChB,IAAME,EAAiBN,EAAIE,KAAKK,aAAe,EAC/ClB,EAAiBiB,MAChBE,OAAM,SAAAC,GACPC,QAAQC,MAAMF,MA6BlB,OACE,qBAAKG,UAAU,MAAf,UAnBqB,IAAjB5B,EAEA,uBAAM6B,SAAUlB,EAAhB,UACE,uBAAOmB,KAAK,OAAOC,SAAUzB,IAC7B,uBAAOwB,KAAK,eAVlBE,aAAY,WACVrB,EAAe,QACd,KAcM,sBAAKiB,UAAU,oBAAf,UACL,sBAAKA,UAAU,iBAAf,0BAA8C5B,KAC9C,sBAAK4B,UAAU,kBAAf,oBAAyC1B,KACzC,sBAAK0B,UAAU,mBAAf,qBAA2CxB,YCvCpC6B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5e6e20ad.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [channelId, setChannelId] = useState('')\n  const [channelSubs, setChannelSubs] = useState(-1)\n  const [channelViews, setChannelViews] = useState(-1)\n  const [channelVideos, setChannelVideos] = useState(-1)\n\n  function changeChannelId(e: any) {\n    const channel: string = e.target.value\n    setChannelId(channel)\n  }\n\n  function getSubscribers(e: any) {\n    if (e !== null) {\n      e.preventDefault()\n    }\n    \n    axios.get(`/channel/${channelId}`).then(res => {\n      const subs: number = res.data.subscriberCount || -1\n      setChannelSubs(subs)\n      const views: number = res.data.viewCount || -1\n      setChannelViews(views)\n      const videos: number = res.data.videoCount || -1\n      setChannelVideos(videos)\n    }).catch(err => {\n      console.error(err)\n    })\n  }\n\n  function watch() {\n    setInterval(() => {\n      getSubscribers(null)\n    }, 1000)\n  }\n\n  function getFormOrSubs() {\n    if (channelSubs === -1) {\n      return (\n        <form onSubmit={getSubscribers}>\n          <input type=\"text\" onChange={changeChannelId}/>\n          <input type=\"submit\"/>\n        </form>\n      )\n    } else {\n      watch()\n\n      return <div className=\"ytchannel-wrapper\">\n        <div className=\"ytchannel-subs\">Subscribers: {channelSubs}</div>\n        <div className=\"ytchannel-views\">Views: {channelViews}</div>\n        <div className=\"ytchannel-videos\">Videos: {channelVideos}</div>\n      </div>\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      { getFormOrSubs() }\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}